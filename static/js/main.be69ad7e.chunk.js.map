{"version":3,"sources":["App.tsx","components/GoodsList.tsx","data/GoodsFromServer.ts","index.tsx"],"names":["SortType","GoodsList","goods","map","goodItem","goodsFromServer","App","state","isReversed","sortType","NONE","sortListByType","setState","reverseList","resetListItems","this","reorderedGoods","visibleGoods","sort","previousGood","currentGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isResetBtn","className","type","classNames","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAUKA,E,iFCJQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBACE,UAAQ,OADV,SAIGA,GAFIA,SCXAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,sBFAGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMM,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,eAAiB,SAACF,GAChB,EAAKG,SAAS,CAAEH,cAPpB,EAUEI,YAAc,WACZ,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAZzB,EAgBEM,eAAiB,WACf,EAAKF,SAAS,CACZJ,YAAY,EACZC,SAAUT,EAASU,QAnBzB,4CAuBE,WAAU,IAAD,OACP,EAGIK,KAAKR,MAFPE,EADF,EACEA,SACAD,EAFF,EAEEA,WAGIQ,EA5DH,SACLd,EADK,GAGJ,IADCO,EACF,EADEA,SAAUD,EACZ,EADYA,WAENS,EAAY,YAAOf,GAmBzB,OAjBAe,EAAaC,MAAK,SAACC,EAAcC,GAC/B,OAAQX,GACN,KAAKT,EAASqB,SACZ,OAAOF,EAAaG,cAAcF,GAEpC,KAAKpB,EAASuB,OACZ,OAAOJ,EAAaK,OAASJ,EAAYI,OAE3C,QACE,OAAO,MAIThB,GACFS,EAAaQ,UAGRR,EAqCkBS,CAAkBrB,EAAiBU,KAAKR,OAEzDoB,EAAalB,IAAaT,EAASU,MAAQF,EAEjD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CACE,WAAYrB,IAAaT,EAASqB,WAIxCU,QAAS,kBACP,EAAKnB,SAAS,CAAEH,SAAUT,EAASqB,YAZvC,iCAkBA,wBACEQ,KAAK,SACLD,UACEE,IACE,SACA,aACA,CACE,WAAYrB,IAAaT,EAASuB,SAIxCQ,QAAS,kBACP,EAAKnB,SAAS,CAAEH,SAAUT,EAASuB,UAZvC,4BAkBA,wBACEM,KAAK,SACLD,UACEE,IACE,SACA,aACA,CACE,YAAatB,IAInBuB,QAAS,kBACP,EAAKnB,UAAS,SAACL,GAAD,MACZ,CAAEC,YAAaD,EAAMC,gBAb3B,qBAoBCmB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAShB,KAAKD,eAHhB,sBAUJ,cAAC,EAAD,CAAWZ,MAAOc,WAvG1B,GAAyBgB,aGjDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.be69ad7e.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nimport { goodsFromServer } from './data/GoodsFromServer';\n\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((previousGood, currentGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return previousGood.localeCompare(currentGood);\n\n      case SortType.LENGTH:\n        return previousGood.length - currentGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortListByType = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetListItems = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const {\n      sortType,\n      isReversed,\n    } = this.state;\n\n    const reorderedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    const isResetBtn = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button',\n                'is-info',\n                {\n                  'is-light': sortType !== SortType.ALPHABET,\n                },\n              )\n            }\n            onClick={() => (\n              this.setState({ sortType: SortType.ALPHABET })\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button',\n                'is-success',\n                {\n                  'is-light': sortType !== SortType.LENGTH,\n                },\n              )\n            }\n            onClick={() => (\n              this.setState({ sortType: SortType.LENGTH })\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button',\n                'is-warning',\n                {\n                  'is-light': !isReversed,\n                },\n              )\n            }\n            onClick={() => (\n              this.setState((state) => (\n                { isReversed: !state.isReversed }\n              ))\n            )}\n          >\n            Reverse\n          </button>\n\n          {isResetBtn && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetListItems}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodsList goods={reorderedGoods} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map((goodItem) => (\n      <li\n        data-cy=\"Good\"\n        key={goodItem}\n      >\n        {goodItem}\n      </li>\n    ))}\n  </ul>\n);\n","export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}